{
  "name": "vscode-edit-csv-latex-table",
  "displayName": "Edit csv & tabular",
  "description": "extension to edit csv files with a table ui",
  "version": "0.9.1",
  "license": "MIT",
  "icon": "images/logo.png",
  "publisher": "LucidaLu",
  "engines": {
    "vscode": "^1.70.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "CSV"
  ],
  "preview": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/janisdd/vscode-edit-csv.git"
  },
  "bugs": {
    "url": "https://github.com/janisdd/vscode-edit-csv/issues"
  },
  "galleryBanner": {
    "color": "#687bff",
    "theme": "light"
  },
  "activationEvents": [
    "onCommand:edit-csv-tabular-tabular.edit",
    "onCommand:edit-csv-tabular.apply",
    "onCommand:edit-csv-tabular.applyAndSave",
    "onCommand:edit-csv-tabular.editWithConfig"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "csv",
        "extensions": [
          ".csv"
        ],
        "aliases": [
          "CSV"
        ]
      },
      {
        "id": "tsv",
        "extensions": [
          ".tsv",
          ".tab"
        ],
        "aliases": [
          "TSV"
        ]
      }
    ],
    "commands": [
      {
        "command": "edit-csv-tabular.edit",
        "category": "Table",
        "title": "Edit csv"
      },
      {
        "command": "edit-csv-tabular.edit-tabular",
        "category": "Table",
        "title": "Edit tabular"
      },
      {
        "command": "edit-csv-tabular.goto-source",
        "category": "Table",
        "title": "Go to csv source file"
      },
      {
        "command": "edit-csv-tabular.apply",
        "category": "Table",
        "title": "Apply changes to source file"
      },
      {
        "command": "edit-csv-tabular.applyAndSave",
        "category": "Table",
        "title": "Apply changes to source file and save"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "resourceLangId == csv && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == tsv && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == CSV && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == TSV && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'CSV (semicolon)' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'csv (semicolon)' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'csv (pipe)' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'csv (whitespace)' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'csv (tilde)' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'csv (caret)' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'csv (colon)' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'csv (double quote)' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'csv (equals)' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'csv (dot)' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'csv (hyphen)' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == 'dynamic csv' && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "when": "editorLangId == csv && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == tsv && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == CSV && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == TSV && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'CSV (semicolon)' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'csv (semicolon)' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'csv (pipe)' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'csv (whitespace)' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'csv (tilde)' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'csv (caret)' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'csv (colon)' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'csv (double quote)' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'csv (equals)' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'csv (dot)' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'csv (hyphen)' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        },
        {
          "when": "editorLangId == 'dynamic csv' && resourceScheme != csv-tabular-edit && !config.csv-tabular-edit.hideOpenCsvEditorUiActions",
          "command": "edit-csv-tabular.edit",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Edit csv configuration",
      "type": "object",
      "properties": {
        "csv-tabular-edit.highlightCsvComments": {
          "type": "boolean",
          "default": true,
          "description": "true: the cell/row color is changed if the first cell is a comment, (might have negative impact on performance e.g. for large data sets), false: no additional highlighting (comments are still treated as comments). NOTE that only the first cell value is saved to the csv file."
        },
        "csv-tabular-edit.tabularFlag": {
          "type": "boolean",
          "default": false
        },
        "csv-tabular-edit.lastRowEnterBehavior": {
          "type": "string",
          "default": "default",
          "description": "if one edits a cell in the last row and presses enter what the editor should do (default is to jump to the first row in the next column)",
          "enum": [
            "default",
            "createRow"
          ],
          "enumDescriptions": [
            "default of handsontable (or lastRowOrFirstRowNavigationBehavior)",
            "create a new row"
          ]
        },
        "csv-tabular-edit.lastColumnTabBehavior": {
          "type": "string",
          "default": "default",
          "description": "if one edits a cell in the last column and presses tab what the editor should do (default is to jump to the first row in the first column)",
          "enum": [
            "default",
            "createColumn"
          ],
          "enumDescriptions": [
            "default of handsontable (or lastColumnOrFirstColumnNavigationBehavior)",
            "create a new column"
          ]
        },
        "csv-tabular-edit.lastRowOrFirstRowNavigationBehavior": {
          "type": "string",
          "default": "stop",
          "description": "if a cell in the last row (or first) is selected and one presses arrow down or (enter in cell editor), what should happen?",
          "enum": [
            "wrap",
            "stop"
          ],
          "enumDescriptions": [
            "the next cell in the first row (or last) should be selected (wrap)",
            "the selection should stay the same (stop)"
          ]
        },
        "csv-tabular-edit.lastColumnOrFirstColumnNavigationBehavior": {
          "type": "string",
          "default": "stop",
          "description": "if a cell in the last column (or first) is selected and one presses arrow right or tab, what should happen?",
          "enum": [
            "wrap",
            "stop"
          ],
          "enumDescriptions": [
            "the first cell in the next row should be selected (wrap)",
            "the selection should stay the same (stop)"
          ]
        },
        "csv-tabular-edit.optionsBarAppearance": {
          "type": "string",
          "default": "collapsed",
          "description": "the appearance of the options bar",
          "enum": [
            "expanded",
            "collapsed"
          ],
          "enumDescriptions": [
            "options bar will always start expanded",
            "options bar will always start collapsed"
          ]
        },
        "csv-tabular-edit.readOption_hasHeader": {
          "type": "string",
          "default": "false",
          "description": "whether the first data line is a header line",
          "enum": [
            "true",
            "false"
          ],
          "enumDescriptions": [
            "first row is the header row",
            "first row is a normal data row"
          ]
        },
        "csv-tabular-edit.readOption_delimiter": {
          "type": "string",
          "default": "",
          "description": "the delimiter to use, empty string to auto detect"
        },
        "csv-tabular-edit.readOption_delimitersToGuess": {
          "type": "array",
          "default": [
            ",",
            "\t",
            "|",
            ";",
            "\u001e",
            "\u001f"
          ],
          "description": "the delimiters to guess automatically (in the given order)"
        },
        "csv-tabular-edit.readOption_comment": {
          "type": "string",
          "default": "#",
          "description": "the string used as comment, empty string to treat every line as data line (no comments)"
        },
        "csv-tabular-edit.readOption_quoteChar": {
          "type": "string",
          "default": "\"",
          "description": "the string used to quote fields",
          "maxLength": 1
        },
        "csv-tabular-edit.readOption_escapeChar": {
          "type": "string",
          "default": "\"",
          "description": "the string used to escape the quote character within a field",
          "maxLength": 1
        },
        "csv-tabular-edit.writeOption_hasHeader": {
          "type": "string",
          "default": "false",
          "description": "whether the first data line is a header line",
          "enum": [
            "true",
            "false"
          ],
          "enumDescriptions": [
            "first row is the header row",
            "first row is a normal data row"
          ]
        },
        "csv-tabular-edit.writeOption_delimiter": {
          "type": "string",
          "default": "",
          "description": "the delimiter to use, empty string to auto detect"
        },
        "csv-tabular-edit.writeOption_comment": {
          "type": "string",
          "default": "#",
          "description": "the string used as comment, empty string to exclude comments"
        },
        "csv-tabular-edit.writeOption_quoteChar": {
          "type": "string",
          "default": "\"",
          "description": "the string used to quote fields",
          "maxLength": 1
        },
        "csv-tabular-edit.writeOption_escapeChar": {
          "type": "string",
          "default": "\"",
          "description": "the string used to escape the quote character within a field",
          "maxLength": 1
        },
        "csv-tabular-edit.doubleClickColumnHandleForcedWith": {
          "type": "number",
          "default": 200,
          "description": "normally the columns are auto sized. If we click on the handle when it has auto size, its width is set to this value (in px). Useful if we have a very wide column (wider than the screen and quickly want to shrink it). Also controls which size is displayed in the context menu for resizing columns."
        },
        "csv-tabular-edit.doubleClickRowHandleForcedHeight": {
          "type": "number",
          "default": 106,
          "description": "normally the rows are auto sized. If we click on the handle when it has auto size, its height is set to this value (in px). Useful if we have a very tall rows (wider than the screen and quickly want to shrink it). Also controls which size is displayed in the context menu for resizing rows (Default value gives you 5 rows with the default font size)."
        },
        "csv-tabular-edit.openSourceFileAfterApply": {
          "type": "boolean",
          "default": false,
          "description": "true: opens the source file after apply, false: keep the editor displayed"
        },
        "csv-tabular-edit.selectTextAfterBeginEditCell": {
          "type": "boolean",
          "default": false,
          "description": "true: select the text inside the cell (note you can also select the cell and start typings to overwrite the cell value), false: cursor starts at the end of the text"
        },
        "csv-tabular-edit.quoteAllFields": {
          "type": "boolean",
          "default": false,
          "description": "true: to always quote fields, false: not (only if necessary, and respect retainQuoteInformation)"
        },
        "csv-tabular-edit.quoteEmptyOrNullFields": {
          "type": "string",
          "default": "false",
          "description": "whether null, undefined and empty values should be quoted (takes precedence over quoteAllFields)",
          "enum": [
            "true",
            "false"
          ],
          "enumDescriptions": [
            "quote null, undefined and empty values",
            "do not quote null, undefined and empty values"
          ]
        },
        "csv-tabular-edit.initiallyHideComments": {
          "type": "boolean",
          "default": false,
          "description": "true: Initially hides rows with comments found in the table, false: not hide rows with comments"
        },
        "csv-tabular-edit.enableWrapping": {
          "type": "boolean",
          "default": true,
          "description": "true: cell content is wrapped and the row height is changed, false: no wrapping (content is hidden)"
        },
        "csv-tabular-edit.initialColumnWidth": {
          "type": "integer",
          "default": 0,
          "description": "the initial width for columns, 0 or a negative number will disable this and auto column size is used on initial render"
        },
        "csv-tabular-edit.autoColumnWidthsIgnoreComments": {
          "type": "boolean",
          "default": true,
          "description": "true: auto sizing columns will ignore comments, false: auto sizing columns will take comments into account"
        },
        "csv-tabular-edit.retainQuoteInformation": {
          "type": "boolean",
          "default": true,
          "description": "true: information about quoted fields are retained during parsing (for more details see readme), false: information about quoted field is discarded"
        },
        "csv-tabular-edit.newColumnQuoteInformationIsQuoted": {
          "type": "boolean",
          "default": false,
          "description": "true: new columns will get true as quote information (also for added columns via expanding), false: new columns will get false as quote information"
        },
        "csv-tabular-edit.disableBorders": {
          "type": "boolean",
          "default": false,
          "description": "true: borders are set to 0 (in css). This helps if you encounter some border color issues, false: normal borders"
        },
        "csv-tabular-edit.initiallyFixedRowsTop": {
          "type": "number",
          "default": 0,
          "description": "the first X rows are pinned so they will stay in view even if you scroll"
        },
        "csv-tabular-edit.initiallyFixedColumnsLeft": {
          "type": "number",
          "default": 0,
          "description": "the first X columns are pinned so they will stay in view even if you scroll"
        },
        "csv-tabular-edit.fontSizeInPx": {
          "type": "number",
          "default": 16,
          "description": "the font size in px, 0 or -x to sync the font size with the editor, +x to overwrite the font size (changing will rerender the table)"
        },
        "csv-tabular-edit.showColumnHeaderNamesWithLettersLikeExcel": {
          "type": "boolean",
          "default": false,
          "description": "true: show column names with letters e.g. A, B, ..., Z (like Excel), false: use numbers for column names e.g. 1, 2, ..."
        },
        "csv-tabular-edit.shouldWatchCsvSourceFile": {
          "type": "boolean",
          "default": true,
          "description": "true: the source csv file is watched for changes. If changes happen the user is notified (maybe the table is automatically reloaded when the table has no changes). false: not watched the source csv file"
        },
        "csv-tabular-edit.sidePanelAppearance": {
          "type": "string",
          "default": "collapsed",
          "description": "the appearance of the side panel",
          "enum": [
            "expanded",
            "collapsed"
          ],
          "enumDescriptions": [
            "side panel will always start expanded",
            "side panel will always start collapsed"
          ]
        },
        "csv-tabular-edit.initialNumbersStyle": {
          "type": "string",
          "default": "en",
          "description": "the initial numbers style for the side panel stats",
          "enum": [
            "en",
            "non-en"
          ],
          "enumDescriptions": [
            "decimal separator is '.' e.g. 3.14 Optional thousand separator: ',' e.g. 1,003.14",
            "decimal separator is ',' e.g. 3,14 Optional thousand separator: '.' e.g. 1.003,14"
          ]
        },
        "csv-tabular-edit.insertRowBehavior": {
          "type": "string",
          "default": "keepRowKeepColumn",
          "description": "which cell should be focused or selected when a new row is inserted (above or below)",
          "enum": [
            "focusFirstCellNewRow",
            "keepRowKeepColumn"
          ],
          "enumDescriptions": [
            "focus the first cell in the new row",
            "keep the currently selected cell"
          ]
        },
        "csv-tabular-edit.insertColBehavior": {
          "type": "string",
          "default": "keepRowKeepColumn",
          "description": "which cell should be focused or selected when a new column is inserted (left or right)",
          "enum": [
            "keepRowFocusNewColumn",
            "keepRowKeepColumn"
          ],
          "enumDescriptions": [
            "we stay in the same row but the cell in the new column is selected",
            "keep the currently selected cell"
          ]
        },
        "csv-tabular-edit.initiallyIsInReadonlyMode": {
          "type": "boolean",
          "default": false,
          "description": "true: table starts in readonly mode, false: normal edit mode"
        },
        "csv-tabular-edit.hideOpenCsvEditorUiActions": {
          "type": "boolean",
          "default": false,
          "description": "false: hide the edit csv button and the file context menu action to open the editor (useful if you want to call this extension from another extension and show a custom button), true: show them"
        },
        "csv-tabular-edit.openTableAndSelectCellAtCursorPos": {
          "type": "string",
          "default": "initialOnly_correctRowAlwaysFirstColumn",
          "description": "if the table should be opened at the cursor position and select the corresponding csv cell",
          "enum": [
            "initialOnly_correctRowAlwaysFirstColumn",
            "initialOnly_correctRowAndColumn",
            "never"
          ],
          "enumDescriptions": [
            "(initial only) select the correct row at the cursor position but always select the first column",
            "only opens the table at the cursor position (cell) the first time the table is opened",
            "never open the table at the cursor position, open the table at the top left corner"
          ]
        },
        "csv-tabular-edit.pasteMode": {
          "type": "string",
          "default": "normal",
          "description": "the paste mode to use (note that this is done after the cell processing e.g. remove quote escapes)",
          "enum": [
            "normal",
            "onlyKeepRowSeparators",
            "onlyKeepColumnSeparators",
            "ignoreAllSeparators"
          ],
          "enumDescriptions": [
            "normal paste (rows and columns are respected)",
            "only keep row separators (ignore column separators) (every row will have 1 column)",
            "only keep column separators (ignore row separators) (only 1 row will be pasted)",
            "always paste into a single cell (ignoring row and column separators)"
          ]
        },
        "csv-tabular-edit.fontFamilyInTable": {
          "type": "string",
          "default": "default",
          "description": "sets the font family used in the table",
          "enum": [
            "default",
            "sameAsCodeEditor"
          ],
          "enumDescriptions": [
            "use the default font",
            "use the same font family as the code editor"
          ]
        },
        "csv-tabular-edit.showDeleteColumnHeaderButton": {
          "type": "boolean",
          "default": true,
          "description": "true: shows a delete column button in the column header (on hover), false: not"
        },
        "csv-tabular-edit.showDeleteRowHeaderButton": {
          "type": "boolean",
          "default": true,
          "description": "true: shows a delete row button in the row header (on hover), false: not"
        },
        "csv-tabular-edit.finalNewLine": {
          "type": "string",
          "default": "sameAsSourceFile",
          "description": "Decides how to handle final new lines when writing the csv data back to the source file",
          "enum": [
            "sameAsSourceFile",
            "add",
            "remove"
          ],
          "enumDescriptions": [
            "If the source csv file had a new line at the end, the resulting csv will also have one. Otherwise, no final new line will be inserted after the data.",
            "Will add a final new line after the csv data",
            "Will not write a final new line after the csv data"
          ]
        },
        "csv-tabular-edit.darkThemeTextColor": {
          "type": "string",
          "default": "#d0d0d0",
          "description": "the color used for text in the dark theme (some valid css string)"
        },
        "csv-tabular-edit.lightThemeTextColor": {
          "type": "string",
          "default": "#657b83",
          "description": "the color used for text in the light theme (some valid css string)"
        },
        "csv-tabular-edit.convertUrlsToLinkTags": {
          "type": "boolean",
          "default": true,
          "description": "true: if a cell contains url-like text, the urls are displayed as urls and can be clicked on. false: all urls are rendered as normal text"
        }
      }
    }
  },
  "scripts": {
    "preinstall": "npx npm-force-resolutions",
    "vscode:prepublish": "npm audit && npm run compile && npm run promptUp",
    "compile": "tsc -p ./ && tsc -p ./csvEditorHtml/tsconfig.json",
    "watch": "tsc -watch -p ./",
    "package": "vsce package",
    "test": "npm run compile && node ./node_modules/vscode/bin/test",
    "test2": "echo 'to run the tests compile and then go to the debug tab and start Extension Tests'",
    "lint": "npx tslint -p . && npx tslint -p ./csvEditorHtml/tsconfig.json",
    "promptUp": "node ./promtUploadbuild.js",
    "buildBrowser": "node ./csvEditorHtml/out/browser/build/build.js"
  },
  "dependencies": {
    "@vscode/webview-ui-toolkit": "1.0.0"
  },
  "devDependencies": {
    "@sweetalert2/theme-dark": "3.2.0",
    "@types/big.js": "4.0.5",
    "@types/fs-extra": "9.0.1",
    "@types/glob": "7.1.2",
    "@types/jsdom": "11.0.4",
    "@types/mocha": "2.2.48",
    "@types/mousetrap": "1.6.3",
    "@types/node": "8.10.25",
    "@types/papaparse": "4.5.6",
    "@types/readline-sync": "1.4.3",
    "@types/vscode": "1.70.0",
    "bulma-toast": "2.0.3",
    "chardet": "1.2.1",
    "fs-extra": "9.0.1",
    "glob": "7.1.6",
    "iconv-lite": "0.6.2",
    "jsdom": "16.7.0",
    "mocha": "9.2.2",
    "readline-sync": "1.4.10",
    "sweetalert2": "9.17.2",
    "toaster-js": "2.2.3",
    "tslint": "5.8.0",
    "typescript": "5.0.4",
    "vscode-test": "1.3.0"
  }
}